package com.example.peter.thekitchenmenu.data.model;

import android.arch.persistence.room.ColumnInfo;
import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.PrimaryKey;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.NonNull;

import com.example.peter.thekitchenmenu.app.Constants;
import com.google.firebase.database.Exclude;

import java.util.HashMap;
import java.util.Map;

/**
 * This is the DmProdMy model. A POJO made flexible with Firebase and Room annotations along with
 * a fully parcelable implementation.
 */
@Entity(tableName = Constants.TABLE_PRODUCT_MY)
public class DmProdMy implements Parcelable {

    @Exclude // Exclude field from Firebase, as is only required for Room.
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_ID)
    private int id;

    // Relates to the community_product table, field _id.
    @Exclude // Exclude field from Firebase, as is only required for Room.
    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_COMM_ID)
    private int mCommunityProductId;

    // DmProdMy fields.
    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_FB_USED_PRODUCT_KEY)
    private String mFbUsedProductsUserKey;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_FB_REFERENCE_KEY)
    private String mFbProductReferenceKey;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_RETAILER)
    private String mRetailer;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_LOCATION_ROOM)
    private String mLocationRoom;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_LOCATION_IN_ROOM)
    private String mLocationInRoom;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_PACK_PRICE)
    private double mPackPrice;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_LOCAL_IMAGE_URI)
    @android.support.annotation.NonNull
    private String mLocalImageUri = "";

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_CREATE_DATE)
    private long mMyCreateDate;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_LAST_UPDATE)
    private long mMyLastUpdate;

    /* Empty constructor as required by Firebase. */
    @Ignore
    public DmProdMy(){}

    /**
     * Constructor for FireBase and Room.
     * @param id A unique ID, auto generated by Room for this instance.
     * @param communityProductId {@link DmProdComm} foreign key.
     * @param fbUsedProductsUserKey Keeps a count of times a products is used in Firebase.
     * @param fbProductReferenceKey The {@link DmProdComm} to which this product relates to.
     * @param retailer The retailer the user uses to acquire this product.
     * @param locationRoom The room in the users hous where they store this product.
     * @param locationInRoom The location within the room where the users stores this product.
     * @param packPrice The price the user pays for this product.
     * @param localImageUri The local Uri for the image this user associates with this product.
     * @param myCreateDate The date when this user created, or added this product.
     * @param myLastUpdate The date when this user last updated this product details.
     */
    public DmProdMy(int id,
                    int communityProductId,
                    String fbUsedProductsUserKey,
                    String fbProductReferenceKey,
                    String retailer,
                    String locationRoom,
                    String locationInRoom,
                    double packPrice,
                    String localImageUri,
                    long myCreateDate,
                    long myLastUpdate) {

        this.id = id;
        this.mCommunityProductId = communityProductId;
        this.mFbUsedProductsUserKey = fbUsedProductsUserKey;
        this.mFbProductReferenceKey = fbProductReferenceKey;
        this.mRetailer = retailer;
        this.mLocationRoom = locationRoom;
        this.mLocationInRoom = locationInRoom;
        this.mPackPrice = packPrice;
        this.mLocalImageUri = localImageUri;
        this.mMyCreateDate = myCreateDate;
        this.mMyLastUpdate = myLastUpdate;
    }

    @Ignore
    public DmProdMy(Parcel in) {
        id = in.readInt();
        mCommunityProductId = in.readInt();
        mFbUsedProductsUserKey = in.readString();
        mFbProductReferenceKey = in.readString();
        mRetailer = in.readString();
        mLocationRoom = in.readString();
        mLocationInRoom = in.readString();
        mPackPrice = in.readDouble();
        mLocalImageUri = in.readString();
        mMyCreateDate = in.readLong();
        mMyLastUpdate = in.readLong();
    }

    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeInt(id);
        parcel.writeInt(mCommunityProductId);
        parcel.writeString(mFbUsedProductsUserKey);
        parcel.writeString(mFbProductReferenceKey);
        parcel.writeString(mRetailer);
        parcel.writeString(mLocationRoom);
        parcel.writeString(mLocationInRoom);
        parcel.writeDouble(mPackPrice);
        parcel.writeString(mLocalImageUri);
        parcel.writeLong(mMyCreateDate);
        parcel.writeLong(mMyLastUpdate);
    }

    @Exclude
    public Map<String, Object> productMyToMap() {

        HashMap<String, Object> result = new HashMap<>();

        result.put(Constants.PRODUCT_MY_FB_USED_PRODUCT_KEY, mFbUsedProductsUserKey);
        result.put(Constants.PRODUCT_MY_RETAILER_KEY, mRetailer);
        result.put(Constants.PRODUCT_MY_LOCATION_ROOM_KEY, mLocationRoom);
        result.put(Constants.PRODUCT_MY_LOCATION_IN_ROOM_KEY, mLocationInRoom);
        result.put(Constants.PRODUCT_MY_PACK_PRICE_KEY, mPackPrice);
        result.put(Constants.PRODUCT_MY_LOCAL_IMAGE_URI_KEY, mLocalImageUri);
        result.put(Constants.PRODUCT_MY_CREATE_DATE_KEY, mMyCreateDate);
        result.put(Constants.PRODUCT_MY_LAST_UPDATE_KEY, mMyLastUpdate);

        return result;
    }


    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<DmProdMy> CREATOR = new Creator<DmProdMy>() {
        @Override
        public DmProdMy createFromParcel(Parcel in) {
            return new DmProdMy(in);
        }

        @Override
        public DmProdMy[] newArray(int size) {
            return new DmProdMy[size];
        }
    };

    @Override
    public String toString() {
        return "Product ID: " + this.id + "\n" +
                "Community product ID: " + this.mCommunityProductId + "\n" +
                "FbUsedProductsUserKey: " + this.mFbUsedProductsUserKey + "\n" +
                "FbProductReferenceKey: " + this.mFbProductReferenceKey + "\n" +
                "Retailer: " + this.mRetailer + "\n" +
                "Location room: " + this.mLocationRoom + "\n" +
                "Location in room: " + this.mLocationInRoom + "\n" +
                "Pack price: " + this.mPackPrice + "\n" +
                "Local image Uri: " + this.mLocalImageUri + "\n" +
                "Create date: " + this.mMyCreateDate + "\n" +
                "Last update: " + this.mMyLastUpdate;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getCommunityProductId() {
        return mCommunityProductId;
    }

    public void setCommunityProductId(int communityProductId) {
        this.mCommunityProductId = communityProductId;
    }

    public String getFbUsedProductsUserKey() {
        return mFbUsedProductsUserKey;
    }

    public void setFbUsedProductsUserKey(String fbUsedProductsUserKey) {
        this.mFbUsedProductsUserKey = fbUsedProductsUserKey;
    }

    public String getFbProductReferenceKey() {
        return mFbProductReferenceKey;
    }

    public void setFbProductReferenceKey(String fbProductReferenceKey) {
        this.mFbProductReferenceKey = fbProductReferenceKey;
    }

    public String getRetailer() {
        return mRetailer;
    }

    public void setRetailer(String retailer) {
        this.mRetailer = retailer;
    }

    public String getLocationRoom() {
        return mLocationRoom;
    }

    public void setLocationRoom(String locationRoom) {
        this.mLocationRoom = locationRoom;
    }

    public String getLocationInRoom() {
        return mLocationInRoom;
    }

    public void setLocationInRoom(String locationInRoom) {
        this.mLocationInRoom = locationInRoom;
    }

    public double getPackPrice() {
        return mPackPrice;
    }

    public void setPackPrice(double packPrice) {
        this.mPackPrice = packPrice;
    }

    @NonNull
    public String getLocalImageUri() {
        return mLocalImageUri;
    }

    public void setLocalImageUri(@NonNull String localImageUri) {
        this.mLocalImageUri = localImageUri;
    }

    public long getMyCreateDate() {
        return mMyCreateDate;
    }

    public void setMyCreateDate(long myCreateDate) {
        this.mMyCreateDate = myCreateDate;
    }

    public long getMyLastUpdate() {
        return mMyLastUpdate;
    }

    public void setMyLastUpdate(long myLastUpdate) {
        this.mMyLastUpdate = myLastUpdate;
    }
}
