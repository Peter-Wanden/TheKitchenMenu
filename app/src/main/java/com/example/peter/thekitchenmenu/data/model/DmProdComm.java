package com.example.peter.thekitchenmenu.data.model;

import android.arch.persistence.room.ColumnInfo;
import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.PrimaryKey;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.NonNull;

import com.example.peter.thekitchenmenu.app.Constants;
import com.google.firebase.database.Exclude;

import java.util.HashMap;
import java.util.Map;

/**
 * A community product model that holds product fields common to all users.
 */
@Entity(tableName = Constants.TABLE_PRODUCT_COMM)
public class DmProdComm implements Parcelable {

    @Exclude // Excludes field from Firebase, as is only required for Room.
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_ID)
    private int id;

    // Community product information.
    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_DESCRIPTION)
    private String mDescription;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_FIELD_MADE_BY)
    private String mMadeBy;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_FIELD_CATEGORY)
    private int mCategory;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_SHELF_LIFE)
    private int mShelfLife;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_PACK_SIZE)
    private int mPackSize;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_UNIT_OF_MEASURE)
    private int mUnitOfMeasure;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_PRICE_AVE)
    private double mPackPriceAverage;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_CREATED_BY)
    private String mCreatedBy;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_MY_FB_STORAGE_IMAGE_URI)
    @android.support.annotation.NonNull
    private String mFbStorageImageUri = "";

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_CREATE_DATE)
    private long mCommCreateDate;

    @ColumnInfo(name = Constants.TABLE_PRODUCT_COMM_LAST_UPDATE)
    private long mCommLastUpdate;

    @ColumnInfo(name = Constants.PRODUCT_MY_FB_REFERENCE_KEY)
    private String mFbProductReferenceKey;

    /* Empty constructor as required by Firebase. */
    @Ignore
    public DmProdComm(){}

    /**
     * Constructor for Room
     * @param id A unique ID, auto generated by Room.
     * @param description A string describing the product.
     * @param madeBy A string describing the name of the maker of the product.
     * @param category An integer between 0 and 3 - see strings.xml for a definition.
     * @param shelfLife An integer between 1 and 16 - see strings.xml for a definition.
     * @param mPackSize An integer describing the weight or volume of the product.
     * @param unitOfMeasure An integer between 0 and 3 - see strings.xml for a definition.
     * @param packPriceAverage A double automatically calculated by a Firebase function.
     * @param createdBy The user ID of the user that created this product.
     * @param fbStorageImageUri A String containing a Firestore URL set to an image of the product.
     * @param commCreateDate A long TIMESTAMP describing when the product was first created.
     * @param commLastUpdate A long TIMESTAMP describing when the product was last updated.
     */
    public DmProdComm(int id,
                      String description,
                      String madeBy,
                      int category,
                      int shelfLife,
                      int mPackSize,
                      int unitOfMeasure,
                      double packPriceAverage,
                      String createdBy,
                      @NonNull String fbStorageImageUri,
                      long commCreateDate,
                      long commLastUpdate,
                      String fbProductReferenceKey) {

        this.id = id;
        this.mDescription = description;
        this.mMadeBy = madeBy;
        this.mCategory = category;
        this.mShelfLife = shelfLife;
        this.mPackSize = mPackSize;
        this.mUnitOfMeasure = unitOfMeasure;
        this.mPackPriceAverage = packPriceAverage;
        this.mCreatedBy = createdBy;
        this.mFbStorageImageUri = fbStorageImageUri;
        this.mCommCreateDate = commCreateDate;
        this.mCommLastUpdate = commLastUpdate;
        this.mFbProductReferenceKey = fbProductReferenceKey;
    }


    @Ignore
    public DmProdComm(Parcel in) {
        id = in.readInt();
        mDescription = in.readString();
        mMadeBy = in.readString();
        mCategory = in.readInt();
        mShelfLife = in.readInt();
        mPackSize = in.readInt();
        mUnitOfMeasure = in.readInt();
        mPackPriceAverage = in.readDouble();
        mCreatedBy = in.readString();
        mFbStorageImageUri = in.readString();
        mCommCreateDate = in.readLong();
        mCommLastUpdate = in.readLong();
        mFbProductReferenceKey = in.readString();
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(id);
        dest.writeString(mDescription);
        dest.writeString(mMadeBy);
        dest.writeInt(mCategory);
        dest.writeInt(mShelfLife);
        dest.writeInt(mPackSize);
        dest.writeInt(mUnitOfMeasure);
        dest.writeDouble(mPackPriceAverage);
        dest.writeString(mCreatedBy);
        dest.writeString(mFbStorageImageUri);
        dest.writeLong(mCommCreateDate);
        dest.writeLong(mCommLastUpdate);
        dest.writeString(mFbProductReferenceKey);
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<DmProdComm> CREATOR = new Creator<DmProdComm>() {
        @Override
        public DmProdComm createFromParcel(Parcel in) {
            return new DmProdComm(in);
        }

        @Override
        public DmProdComm[] newArray(int size) {
            return new DmProdComm[size];
        }
    };

    @Exclude // HashMap for FireBase community product information Map
    public Map<String, Object> commProductToMap() {

        HashMap<String, Object> result = new HashMap<>();

        result.put(Constants.PRODUCT_COMM_DESCRIPTION_KEY, mDescription);
        result.put(Constants.PRODUCT_COMM_MADE_BY_KEY, mMadeBy);
        result.put(Constants.PRODUCT_COMM_CATEGORY_KEY, mCategory);
        result.put(Constants.PRODUCT_COMM_SHELF_LIFE_KEY, mShelfLife);
        result.put(Constants.PRODUCT_COMM_PACK_SIZE_KEY, mPackSize);
        result.put(Constants.PRODUCT_COMM_UNIT_OF_MEASURE_KEY, mUnitOfMeasure);
        result.put(Constants.PRODUCT_COMM_PRICE_AVE_KEY, mPackPriceAverage);
        result.put(Constants.PRODUCT_COMM_CREATED_BY_KEY, mCreatedBy);
        result.put(Constants.PRODUCT_MY_FB_STORAGE_IMAGE_URI_KEY, mFbStorageImageUri);
        result.put(Constants.PRODUCT_COMM_CREATE_DATE_KEY, mCommCreateDate);
        result.put(Constants.PRODUCT_COMM_LAST_UPDATE_KEY, mCommLastUpdate);

        return result;
    }

    @Override
    public String toString() {
        return "Product ID: " + this.id + "\n" +
                "Description: " + mDescription + "\n" +
                "Made by: " + mMadeBy + "\n" +
                "Category: " + mCategory + "\n" +
                "Shelf life: " + mShelfLife + "\n" +
                "Pack size: " + mPackSize + "\n" +
                "Unit of measure: " + mUnitOfMeasure + "\n" +
                "Pack price ave: " + mPackPriceAverage + "\n" +
                "Created by: " + mCreatedBy + "\n" +
                "Firebase image URI: " + mFbStorageImageUri + "\n" +
                "Create date: " + mCommCreateDate + "\n" +
                "Last update: " + mCommLastUpdate + "\n" +
                "Product ref key: " + mFbProductReferenceKey;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getDescription() {
        return mDescription;
    }

    public void setDescription(String description) {
        this.mDescription = description;
    }

    public String getMadeBy() {
        return mMadeBy;
    }

    public void setMadeBy(String madeBy) {
        this.mMadeBy = madeBy;
    }

    public int getCategory() {
        return mCategory;
    }

    public void setCategory(int category) {
        this.mCategory = category;
    }

    public int getShelfLife() {
        return mShelfLife;
    }

    public void setShelfLife(int shelfLife) {
        this.mShelfLife = shelfLife;
    }

    public int getPackSize() {
        return mPackSize;
    }

    public void setPackSize(int packSize) {
        this.mPackSize = packSize;
    }

    public int getUnitOfMeasure() {
        return mUnitOfMeasure;
    }

    public void setUnitOfMeasure(int unitOfMeasure) {
        this.mUnitOfMeasure = unitOfMeasure;
    }

    public double getPackPriceAverage() {
        return mPackPriceAverage;
    }

    public void setPackPriceAverage(double packPriceAverage) {
        this.mPackPriceAverage = packPriceAverage;
    }

    public String getCreatedBy() {
        return mCreatedBy;
    }

    public void setCreatedBy(String createdBy) {
        this.mCreatedBy = createdBy;
    }

    @NonNull
    public String getFbStorageImageUri() {
        return mFbStorageImageUri;
    }

    public void setFbStorageImageUri(@NonNull String fbStorageImageUri) {
        this.mFbStorageImageUri = fbStorageImageUri;
    }

    public long getCommCreateDate() {
        return mCommCreateDate;
    }

    public void setCommCreateDate(long commCreateDate) {
        this.mCommCreateDate = commCreateDate;
    }

    public long getCommLastUpdate() {
        return mCommLastUpdate;
    }

    public void setCommLastUpdate(long commLastUpdate) {
        this.mCommLastUpdate = commLastUpdate;
    }

    public String getFbProductReferenceKey() {
        return mFbProductReferenceKey;
    }

    public void setFbProductReferenceKey(String fbProductReferenceKey) {
        this.mFbProductReferenceKey = fbProductReferenceKey;
    }
}
