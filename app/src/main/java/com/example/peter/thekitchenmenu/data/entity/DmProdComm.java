package com.example.peter.thekitchenmenu.data.entity;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.firebase.database.Exclude;

import java.util.HashMap;
import java.util.Map;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

import static com.example.peter.thekitchenmenu.data.entity.DmProdComm.TABLE_PROD_COMM;

/**
 * A community product model that holds product fields common to all users.
 */
@Entity(tableName = TABLE_PROD_COMM)
public class DmProdComm implements Parcelable {

    public static final String TAG = "DmProdComm";

    public static final String TABLE_PROD_COMM = "product_community";
    public static final String PROD_COMM_ID = "id";
    public static final String PROD_COMM_DESC = "description";
    public static final String PROD_COMM_MADE_BY = "madeBy";
    public static final String PROD_COMM_CATEGORY = "category";
    public static final String PROD_COMM_SHELF_LIFE = "shelfLife";
    public static final String PROD_COMM_PACK_SIZE = "packSize";
    public static final String PROD_COMM_UNIT_OF_MEASURE = "unitOfMeasure";
    public static final String PROD_COMM_PRICE_AVE = "packAvePrice";
    public static final String PROD_COMM_CREATED_BY = "createdBy";
    public static final String PROD_COMM_REMOTE_IMAGE_URI = "fbStorageImageUri";
    public static final String PROD_COMM_CREATE_DATE = "comm_create_date";
    public static final String PROD_COMM_LAST_UPDATE = "comm_last_updated";
    public static final String PROD_COMM_REMOTE_REF_ID = "fbProductReferenceKey";

    @Exclude // Excludes field from Firebase, as is only required for Room.
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = PROD_COMM_ID)
    private int id;

    // Community product information.
    @ColumnInfo(name = PROD_COMM_DESC)
    private String description;

    @ColumnInfo(name = PROD_COMM_MADE_BY)
    private String madeBy;

    @ColumnInfo(name = PROD_COMM_CATEGORY)
    private int category;

    @ColumnInfo(name = PROD_COMM_SHELF_LIFE)
    private int shelfLife;

    @ColumnInfo(name = PROD_COMM_PACK_SIZE)
    private int packSize;

    @ColumnInfo(name = PROD_COMM_UNIT_OF_MEASURE)
    private int unitOfMeasure;

    @ColumnInfo(name = PROD_COMM_PRICE_AVE)
    private double packAvePrice;

    @ColumnInfo(name = PROD_COMM_CREATED_BY)
    private String createdBy;

    @ColumnInfo(name = PROD_COMM_REMOTE_IMAGE_URI)
    @NonNull
    private String fbStorageImageUri = "";

    @ColumnInfo(name = PROD_COMM_CREATE_DATE)
    private long commCreateDate;

    @ColumnInfo(name = PROD_COMM_LAST_UPDATE)
    private long commLastUpdate;

    @ColumnInfo(name = PROD_COMM_REMOTE_REF_ID)
    private String fbProductReferenceKey;

    /* Empty constructor as required by Firebase. */
    @Ignore
    public DmProdComm(){}

    /**
     * Constructor for Room
     * @param id A unique ID, auto generated by Room.
     * @param description A string describing the product.
     * @param madeBy A string describing the name of the maker of the product.
     * @param category An integer between 0 and 3 - see strings.xml for a definition.
     * @param shelfLife An integer between 1 and 16 - see strings.xml for a definition.
     * @param packSize An integer describing the weight or volume of the product.
     * @param unitOfMeasure An integer between 0 and 3 - see strings.xml for a definition.
     * @param packAvePrice A double automatically calculated by a Firebase function.
     * @param createdBy The user ID of the user that created this product.
     * @param fbStorageImageUri A String containing a Firestore URL set to an image of the product.
     * @param commCreateDate A long TIMESTAMP describing when the product was first created.
     * @param commLastUpdate A long TIMESTAMP describing when the product was last updated.
     */
    public DmProdComm(int id,
                      String description,
                      String madeBy,
                      int category,
                      int shelfLife,
                      int packSize,
                      int unitOfMeasure,
                      double packAvePrice,
                      String createdBy,
                      @NonNull String fbStorageImageUri,
                      long commCreateDate,
                      long commLastUpdate,
                      String fbProductReferenceKey) {

        this.id = id;
        this.description = description;
        this.madeBy = madeBy;
        this.category = category;
        this.shelfLife = shelfLife;
        this.packSize = packSize;
        this.unitOfMeasure = unitOfMeasure;
        this.packAvePrice = packAvePrice;
        this.createdBy = createdBy;
        this.fbStorageImageUri = fbStorageImageUri;
        this.commCreateDate = commCreateDate;
        this.commLastUpdate = commLastUpdate;
        this.fbProductReferenceKey = fbProductReferenceKey;
    }


    @Ignore
    public DmProdComm(Parcel in) {
        id = in.readInt();
        description = in.readString();
        madeBy = in.readString();
        category = in.readInt();
        shelfLife = in.readInt();
        packSize = in.readInt();
        unitOfMeasure = in.readInt();
        packAvePrice = in.readDouble();
        createdBy = in.readString();
        fbStorageImageUri = in.readString();
        commCreateDate = in.readLong();
        commLastUpdate = in.readLong();
        fbProductReferenceKey = in.readString();
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(id);
        dest.writeString(description);
        dest.writeString(madeBy);
        dest.writeInt(category);
        dest.writeInt(shelfLife);
        dest.writeInt(packSize);
        dest.writeInt(unitOfMeasure);
        dest.writeDouble(packAvePrice);
        dest.writeString(createdBy);
        dest.writeString(fbStorageImageUri);
        dest.writeLong(commCreateDate);
        dest.writeLong(commLastUpdate);
        dest.writeString(fbProductReferenceKey);
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<DmProdComm> CREATOR = new Creator<DmProdComm>() {
        @Override
        public DmProdComm createFromParcel(Parcel in) {
            return new DmProdComm(in);
        }

        @Override
        public DmProdComm[] newArray(int size) {
            return new DmProdComm[size];
        }
    };

    @Exclude // HashMap for FireBase community product information Map
    public Map<String, Object> commProductToMap() {

        HashMap<String, Object> result = new HashMap<>();

        result.put(PROD_COMM_DESC, description);
        result.put(PROD_COMM_MADE_BY, madeBy);
        result.put(PROD_COMM_CATEGORY, category);
        result.put(PROD_COMM_SHELF_LIFE, shelfLife);
        result.put(PROD_COMM_PACK_SIZE, packSize);
        result.put(PROD_COMM_UNIT_OF_MEASURE, unitOfMeasure);
        result.put(PROD_COMM_PRICE_AVE, packAvePrice);
        result.put(PROD_COMM_CREATED_BY, createdBy);
        result.put(PROD_COMM_REMOTE_IMAGE_URI, fbStorageImageUri);
        result.put(PROD_COMM_CREATE_DATE, commCreateDate);
        result.put(PROD_COMM_LAST_UPDATE, commLastUpdate);

        return result;
    }

    @Override
    public String toString() {
        return "Product ID: " + this.id + "\n" +
                "Description: " + description + "\n" +
                "Made by: " + madeBy + "\n" +
                "Category: " + category + "\n" +
                "Shelf life: " + shelfLife + "\n" +
                "Pack size: " + packSize + "\n" +
                "Unit of measure: " + unitOfMeasure + "\n" +
                "Pack price ave: " + packAvePrice + "\n" +
                "Created by: " + createdBy + "\n" +
                "Firebase image URI: " + fbStorageImageUri + "\n" +
                "Create date: " + commCreateDate + "\n" +
                "Last update: " + commLastUpdate + "\n" +
                "Product ref key: " + fbProductReferenceKey;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getMadeBy() {
        return madeBy;
    }

    public void setMadeBy(String madeBy) {
        this.madeBy = madeBy;
    }

    public int getCategory() {
        return category;
    }

    public void setCategory(int category) {
        this.category = category;
    }

    public int getShelfLife() {
        return shelfLife;
    }

    public void setShelfLife(int shelfLife) {
        this.shelfLife = shelfLife;
    }

    public int getPackSize() {
        return packSize;
    }

    public void setPackSize(int packSize) {
        this.packSize = packSize;
    }

    public int getUnitOfMeasure() {
        return unitOfMeasure;
    }

    public void setUnitOfMeasure(int unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
    }

    public double getPackAvePrice() {
        return packAvePrice;
    }

    public void setPackAvePrice(double packAvePrice) {
        this.packAvePrice = packAvePrice;
    }

    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @NonNull
    public String getFbStorageImageUri() {
        return fbStorageImageUri;
    }

    public void setFbStorageImageUri(@NonNull String fbStorageImageUri) {
        this.fbStorageImageUri = fbStorageImageUri;
    }

    public long getCommCreateDate() {
        return commCreateDate;
    }

    public void setCommCreateDate(long commCreateDate) {
        this.commCreateDate = commCreateDate;
    }

    public long getCommLastUpdate() {
        return commLastUpdate;
    }

    public void setCommLastUpdate(long commLastUpdate) {
        this.commLastUpdate = commLastUpdate;
    }

    public String getFbProductReferenceKey() {
        return fbProductReferenceKey;
    }

    public void setRemoteProdRefKey(String fbProductReferenceKey) {
        this.fbProductReferenceKey = fbProductReferenceKey;
    }
}
