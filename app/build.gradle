apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '29.0.2'

    signingConfigs {

        config {
            keyAlias 'TKMKey'
            keyPassword 'Z5g3yqgZZyuCpSfANITG'
            storeFile file('../TKMKeyStore.jks')
            storePassword 'dE3kTCQc3vKMdDNN5nGe'
        }
    }

    defaultConfig {

        applicationId "com.example.peter.thekitchenmenu"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resConfigs "en" // Add any other language support here
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility '1.8'
        targetCompatibility '1.8'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {

        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppcompat"
    implementation "androidx.recyclerview:recyclerview:$androidxRecyclerView"
    implementation "androidx.cardview:cardview:$androidxSupportVersion"
    implementation "androidx.exifinterface:exifinterface:$androidxSupportVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidxSupportVersion"
    implementation "androidx.browser:browser:$androidxSupportVersion"
    implementation "com.google.android.material:material:$androidMaterial"

    // Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$androidxLifecycleExtensions"
    implementation "androidx.lifecycle:lifecycle-runtime:$androidxLifecycleRuntime"
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidxArchComponentsVersion"

    // Room
    implementation "androidx.room:room-runtime:$androidxRoomVersion"
    annotationProcessor "androidx.room:room-compiler:$androidxRoomVersion"

    // Paging
    implementation "androidx.paging:paging-runtime:$androidxPagingRuntimeVersion"

    // Constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Image processing TODO - Replace with Glide
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.theartofdev.edmodo:android-image-cropper:2.8.0"

    // Play services
    implementation "com.google.android.gms:play-services-ads-identifier:$playServicesAddsIdentifier"
    implementation "com.google.android.gms:play-services-auth:$playServicesAuth"
    implementation "com.google.android.gms:play-services-auth-api-phone:$playServicesAuthApiPhone"
    implementation "com.google.android.gms:play-services-auth-base:$playServicesAuthBase"
    implementation "com.google.android.gms:play-services-base:$playServicesBase"
    implementation "com.google.android.gms:play-services-basement:$playServicesBasement"
    implementation "com.google.android.gms:play-services-flags:$playServicesFlags"
    implementation "com.google.android.gms:play-services-phenotype:$playServicesPhenotype"
    implementation "com.google.android.gms:play-services-stats:$playServicesStats"
    implementation "com.google.android.gms:play-services-tasks:$playServicesTasks"

    // Firebase
    implementation "com.google.firebase:firebase-auth:$firebaseAuth"
    implementation "com.google.firebase:firebase-config:$firebaseConfigVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCore"
    implementation "com.google.firebase:firebase-database:$firebaseDatabase"
    implementation "com.google.firebase:firebase-storage:$firebaseStorage"

    //////// Firebase UI ////////
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiAuth"

    // Allows direct binding of data to display
    implementation "com.firebaseui:firebase-ui-database:$firebaseUiAuth"

    //////// TESTING ////////
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest"

    testImplementation "androidx.arch.core:core-testing:$androidxCoreTesting"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidxTestRunner"
    androidTestImplementation "androidx.test:rules:$androidxTestRules"

    androidTestImplementation "androidx.room:room-testing:$androidxRoomTestingVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing dependencies.
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidxEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidxEspresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoConcurrent"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoIdlingResource"

    /*
    Resolves dependency versions across test and production APKs, specifically, transitive
    dependencies. This is required since Espresso internally has a dependency on support-annotations.
    */
    androidTestImplementation "androidx.annotation:annotation:$annotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidxSupportVersion"
    androidTestImplementation "androidx.recyclerview:recyclerview:$androidxRecyclerView"
    androidTestImplementation "androidx.appcompat:appcompat:$androidxAppcompat"
    androidTestImplementation "com.google.android.material:material:$androidMaterial"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
}

// Reads the configuration information in app/google-services.json
apply plugin: 'com.google.gms.google-services'
